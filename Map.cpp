/*******************************************************************************
* タイトル:		マッププログラム
* プログラム名:	Map.cpp
* 作成者:		GP11B341 35 頼凱興
* 作成日:		2018/06/29
*******************************************************************************/

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "Map.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/
#define Map_Height (16)			// マップ配列の高さ
#define Map_Width (49)			// マップ配列の横幅
#define LanternRange (9)		// ランタン照明の範囲
#define MapStart_X (3)			// マップ描画の始点 = BackGroundの(3, 1)
#define MapStart_Y (1)
#define SecretDoor_X (10)		// 隠しドアの座標
#define SecretDoor_Y (13)
#define RoomFire_Left_X (10)	// ボス部屋のトーチの位置
#define RoomFire_Right_X (36)



/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/


/*******************************************************************************
* グローバル変数
*******************************************************************************/
// ====================
// ========入口========
// ====================
char Map_Enterance[Map_Height][Map_Width] = {
	"                 入          口                 ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■              ■  上  ■              Ｋ■■",
	"■■              ■  ○  ■                ■■",
	"■■              ■■Ⅲ■■                ■■",
	"■■                  ①                    ■■",
	"■■                                        ■■",
	"■■                                        ■■",
	"■■                                        ■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
};

/*
char Map_Enterance[Map_Height][Map_Width] = {
	"                 入          口                 ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■Ⅲ  鎧      ↑■  上  ■        ○    ⑦■■",
	"■■Ｋ  鎧  鎧    ■      ■              ⑥■■",
	"■■Ｄ            ■■  ■■              ⑤■■",
	"■■Ａ  剣  剣                            ④■■",
	"■■◎  剣                        ⑩      ③■■",
	"■■○  図                    経  ⑨      ②■■",
	"■■Ｓ  Ｍ  翼    ＄          金  ⑧      ①■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
};
*/

// ====================
// =========1F=========
// ====================
char Map_1F[Map_Height][Map_Width] = {
	"                第     １     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■○Ａ②■■■■■下■■■■■■■■■■■■",
	"■■■○Ｄ①■■■■■  ■■■■■■■■■■■■",
	"■■■■Ⅲ■■■■■■①■■■■■■■■■■■■",
	"■■■■  ■■■■■■①■■■■■■■■■■■■",
	"■■■■  ■■■■■■  ■■■■■■■■■■■■",
	"■■■■  ■■■■■①①  ■■■■■■■■■■■",
	"■上  ①      ①    ①■    ①    ○  ①    上■",
	"■■■■■■■■■■    ①■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■②■■■■■■■■■■■■",
	"■■■■■■■■■■①  ①■■■■■■■■■■■",
	"■■■■■■■■■■○Ｋ○■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_1F[Map_Height][Map_Width] = {
	"                第     １     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■  Ａ  ■■■■■下■■■■■■■■■■■■",
	"■■■  Ｄ  ■■■■■  ■■■■■■■■■■■■",
	"■■■■  ■■■■■■  ■■■■■■■■■■■■",
	"■■■■  ■■■■■■  ■■■■■■■■■■■■",
	"■■■■  ■■■■■■  ■■■■■■■■■■■■",
	"■■■■  ■■■■■      ■■■■■■■■■■■",
	"■上                  ■                    上■",
	"■■■■■■■■■■      ■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■      ■■■■■■■■■■■",
	"■■■■■■■■■■      ■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========2F=========
// ====================
char Map_2F[Map_Height][Map_Width] = {
	"                第     ２     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■上    ①      ②  ○  ①      ②  Ａ■",
	"■■■■■■■■■■■■■■■■■■  ①■①Ａ■",
	"■■■■■■■■■■■■■■■■■■■○①■■■",
	"■■■■■■■■■■■■■■■■■■■  ○■■■",
	"■■■■■■■■■■■■■■■■■■■①  ■■■",
	"■■■■■■■■■■■■■■■■■■■  ①■■■",
	"■下    ①①    ＤＫ■■■■■①            下■",
	"■■■■■■■■■■■■■■■①■■■■■■■■",
	"■■■■■■■■■■■■■■■  ■■■■■■■■",
	"■■■■  ②①■■■■■■■■  ■■■■■■■■",
	"■■■■上  ②Ⅲ②      ①①    ■■■■■■■■",
	"■■■■  ②①■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_2F[Map_Height][Map_Width] = {
	"                第     ２     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■上                                Ａ■",
	"■■■■■■■■■■■■■■■■■■    ■  Ａ■",
	"■■■■■■■■■■■■■■■■■■■    ■■■",
	"■■■■■■■■■■■■■■■■■■■    ■■■",
	"■■■■■■■■■■■■■■■■■■■    ■■■",
	"■■■■■■■■■■■■■■■■■■■    ■■■",
	"■下              Ｋ■■■■■              下■",
	"■■■■■■■■■■■■■■■  ■■■■■■■■",
	"■■■■■■■■■■■■■■■  ■■■■■■■■",
	"■■■■      ■■■■■■■■  ■■■■■■■■",
	"■■■■上                      ■■■■■■■■",
	"■■■■      ■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========3F=========
// ====================
char Map_3F[Map_Height][Map_Width] = {
	"                第     ３     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■下    ②■■■■■■■■■■■Ｓ■■■",
	"■■■■■■■■  ■■■■■■■■■■■Ｋ■■■",
	"■■■■■②        ■■■②    Ｄ      ③■■■",
	"■■■■■①■■■①          ■■■■○  ■■■",
	"■■■■■①    ①  ■■■■■■■■■■  ■■■",
	"■■■■■■■  ■■■■■■■■②◎■■  ■■■",
	"■■■■■■■①    Ａ○    ①    ②■■②■■■",
	"■■■■■■■■■■■■■■■■■Ⅲ■■  ■■■",
	"■■■■■■■■■■■■■■■■■  ■■  ■■■",
	"■■■■■■■■■■■  ②Ｄ■■■＄■■上■■■",
	"■■■■下            ◎図③■■■■■■■■■■",
	"■■■■■■■■■■■  ②Ａ■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_3F[Map_Height][Map_Width] = {
	"                第     ３     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■下      ■■■■■■■■■■■  ■■■",
	"■■■■■■■■  ■■■■■■■■■■■  ■■■",
	"■■■■■          ■■■                ■■■",
	"■■■■■  ■■■            ■■■■    ■■■",
	"■■■■■          ■■■■■■■■■■  ■■■",
	"■■■■■■■  ■■■■■■■■    ■■  ■■■",
	"■■■■■■■                      ■■  ■■■",
	"■■■■■■■■■■■■■■■■■  ■■  ■■■",
	"■■■■■■■■■■■■■■■■■  ■■  ■■■",
	"■■■■■■■■■■■      ■■■  ■■上■■■",
	"■■■■下                  ■■■■■■■■■■",
	"■■■■■■■■■■■      ■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========4F=========
// ====================
char Map_4F[Map_Height][Map_Width] = {
	"                第     ４     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■剣Ｋ  ④    ③  ③      ③        ■■■",
	"■■■■■■■■■■■  ■■■■■■■■  ■■■",
	"■■■■■■■■■■■上■■■■■■■■  ■■■",
	"■■■■■■■■■■■■■■■■■■■    ③■■",
	"■■■■■◎  ②    ②  ③      ③      ③◎■■",
	"■■■■■  ■■■■■  ■■■■■■■③ＡＫ■■",
	"■■■■■  ■■■■■上■■■■■■■■■■■■",
	"■■■■②    ■■■■■■■■■■■■■■■■■",
	"■■■■Ａ②    ③    ②    ②    ②      ■■■",
	"■■■■Ｄ○②■■■■  ■■■■■■■■下■■■",
	"■■■■■■■■■■■上■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",

};

/*
char Map_4F[Map_Height][Map_Width] = {
	"                第     ４     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■                                  ■■■",
	"■■■■■■■■■■■  ■■■■■■■■  ■■■",
	"■■■■■■■■■■■上■■■■■■■■  ■■■",
	"■■■■■■■■■■■■■■■■■■■      ■■",
	"■■■■■                                  ■■",
	"■■■■■  ■■■■■  ■■■■■■■      ■■",
	"■■■■■  ■■■■■上■■■■■■■■■■■■",
	"■■■■      ■■■■■■■■■■■■■■■■■",
	"■■■■                                  ■■■",
	"■■■■      ■■■■  ■■■■■■■■下■■■",
	"■■■■■■■■■■■上■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",

};
*/

// ====================
// =========5F=========
// ====================
char Map_5F[Map_Height][Map_Width] = {
	"                第     ５     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■上■■■■■■■■■■■■■■■■■■■■■",
	"■■  ■■■■■■■③  ③■■■■■■■■■■■",
	"■■  ⑤  ○  ④④    下  ○  ②③③  ○■■■■",
	"■■  ■■■■■■■■■Ⅲ■■■■■■  ■■■■",
	"■■②■■■■■■■■■④■■■■■■  ■■■■",
	"■■  ■■■■■■■③  ③■■■■■■④■■■■",
	"■■④        ③③    下  ■■■■■Ａ◎Ａ■■■",
	"■■  ■■■■■■■■■Ⅲ■■■■■■④■■■■",
	"■■②■■■■■■■■■③■■■■■■⑤■■■■",
	"■■  ■■■■■■■②  ③■■■■■④Ｋ④■■■",
	"■■③    ○  ②②    下  ■■■■■＄⑤翼■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_5F[Map_Height][Map_Width] = {
	"                第     ５     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■上■■■■■■■■■■■■■■■■■■■■■",
	"■■  ■■■■■■■      ■■■■■■■■■■■",
	"■■                  下                ■■■■",
	"■■  ■■■■■■■■■  ■■■■■■  ■■■■",
	"■■  ■■■■■■■■■  ■■■■■■  ■■■■",
	"■■  ■■■■■■■      ■■■■■■  ■■■■",
	"■■                  下  ■■■■■      ■■■",
	"■■  ■■■■■■■■■  ■■■■■■  ■■■■",
	"■■  ■■■■■■■■■  ■■■■■■  ■■■■",
	"■■  ■■■■■■■      ■■■■■      ■■■",
	"■■                  下  ■■■■■      ■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========6F=========
// ====================
char Map_6F[Map_Height][Map_Width] = {
	"                第     ６     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■下    ③    ③    ③    ④    ④    ⑤上■■",
	"■■    ■■■■■■■■■■■■■■■■■■■■",
	"■■  ■■■■■■■■■■■■■■■■■■■■■",
	"■■①■Ａ■◎④    ④  Ｄ④    ④    ③  ◎■■",
	"■■  ■◎■  ■■■■■■■■■■■■■■  ■■",
	"■■①■○■  ■上  Ｍ  ⑥    ⑥  Ｄ⑥■■③■■",
	"■■  ■鎧Ⅲ⑤■■■■■■■■■■■  ■■  ■■",
	"■■①■○■  ■■■■■■■■■■■  ■■③■■",
	"■■  ■◎■    ⑤    ⑤    ⑤    ⑥Ａ■■  ■■",
	"■■①■Ｄ■■■■■■■■■■■■■■■■③■■",
	"■■  ■■■■■■■■■■■■■■■■■■  ■■",
	"■■○  ②  ②  ②  ②  ②○②  ②  ②  ②Ａ■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_6F[Map_Height][Map_Width] = {
	"                第     ６     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■下                                    上■■",
	"■■    ■■■■■■■■■■■■■■■■■■■■",
	"■■  ■■■■■■■■■■■■■■■■■■■■■",
	"■■  ■  ■                                ■■",
	"■■  ■  ■  ■■■■■■■■■■■■■■  ■■",
	"■■  ■  ■  ■上                    ■■  ■■",
	"■■  ■      ■■■■■■■■■■■  ■■  ■■",
	"■■  ■  ■  ■■■■■■■■■■■  ■■  ■■",
	"■■  ■  ■                          ■■  ■■",
	"■■  ■  ■■■■■■■■■■■■■■■■  ■■",
	"■■  ■■■■■■■■■■■■■■■■■■  ■■",
	"■■                                        ■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========7F=========
// ====================
char Map_7F[Map_Height][Map_Width] = {
	"                第     ７     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■  ⑤  下■■",
	"■■■■■■■■■■■■■■ＳⅢ      ■    ■■",
	"■■■■■■■■■■Ａ    ⑥⑦■■■■■■⑤■■",
	"■■■■■■Ｄ    ⑥  ■■■■■■■■■■  ■■",
	"■■  ⑦⑥    ■■■■■■■■■■■■■■  ■■",
	"■■上  ■■■■下○⑥◎⑦⑧⑨Ｓ⑨⑩⑩↑■⑤■■",
	"■■  ⑦    ⑥■■■■■■■■■■■■■■  ■■",
	"■■■■■■    Ａ  ⑥■■■■■■■■■■  ■■",
	"■■■■■■■■■■        ⑥■■■■■■⑤■■",
	"■■■■■■■■■■■■■■    Ｄ  ⑤■○  ■■",
	"■■■■■■■■■■■■■■■■■■        ■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_7F[Map_Height][Map_Width] = {
	"                第     ７     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■      下■■",
	"■■■■■■■■■■■■■■          ■    ■■",
	"■■■■■■■■■■          ■■■■■■  ■■",
	"■■■■■■          ■■■■■■■■■■  ■■",
	"■■          ■■■■■■■■■■■■■■  ■■",
	"■■上  ■■■■下                      ■  ■■",
	"■■          ■■■■■■■■■■■■■■  ■■",
	"■■■■■■          ■■■■■■■■■■  ■■",
	"■■■■■■■■■■          ■■■■■■  ■■",
	"■■■■■■■■■■■■■■          ■    ■■",
	"■■■■■■■■■■■■■■■■■■        ■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========8F=========
// ====================
char Map_8F[Map_Height][Map_Width] = {
	"                第     ８     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■⑥      Ｋ      ⑦■■■■■■■■",
	"■■■■■■    ■■■■■■■    ■■■■■■■",
	"■■■■■  ⑥■■⑦Ｄ  Ａ⑦■■⑦  ■■■■■■",
	"■■■■⑥  ■■○  ■⑧■  ○■■  ⑧■■■■■",
	"■■■    ■■    ■○⑨○■    ■■    ■■■■",
	"■■下    ⑦  ⑦■■⑨鎧⑨■■⑦  ⑦    上■■■",
	"■■■    ■■    ■○⑨○■    ■■    ■■■■",
	"■■■■⑥  ■■○  ■⑧■  ○■■  ⑧■■■■■",
	"■■■■■  ⑥■■⑦Ａ  Ｄ⑦■■⑦  ■■■■■■",
	"■■■■■■    ■■■■■■■    ■■■■■■■",
	"■■■■■■■⑥    Ｄ○Ａ    ⑦■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_8F[Map_Height][Map_Width] = {
	"                第     ８     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■                  ■■■■■■■■",
	"■■■■■■    ■■■■■■■    ■■■■■■■",
	"■■■■■    ■■          ■■    ■■■■■■",
	"■■■■    ■■    ■  ■    ■■    ■■■■■",
	"■■■    ■■    ■      ■    ■■    ■■■■",
	"■■下          ■■      ■■          上■■■",
	"■■■    ■■    ■      ■    ■■    ■■■■",
	"■■■■    ■■    ■  ■    ■■    ■■■■■",
	"■■■■■    ■■          ■■    ■■■■■■",
	"■■■■■■    ■■■■■■■    ■■■■■■■",
	"■■■■■■■                  ■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========9F=========
// ====================
char Map_9F[Map_Height][Map_Width] = {
	"                第     ９     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■剣⑩■■■■■■■■■ＡＡ■■■■■",
	"■■■■■■■  ⑨■■■■■■■  ⑧■■■■■■",
	"■■■■■■■■  ⑧■■■■■  ⑧■■■■■■■",
	"■■■■■■■■■  Ⅲ■■■  ⑧■■■■■■■■",
	"■■■■■■■■■■    ⑧    ■■■■■■■■■",
	"■■■Ｋ⑨⑨  ○  ⑨  ⑦⑨⑦  ⑦  ⑦    下■■■",
	"■■■■■■■■■■    ⑧    ■■■■■■■■■",
	"■■■■■■■■■  ⑧■■■⑦  ■■■■■■■■",
	"■■■■■■■■    ■■■■■⑦  ■■■■■■■",
	"■■■■■■■  ⑧■■■■■■■⑧  ■■■■■■",
	"■■■■■■    ■■■■■■■■■⑨  ■■■■■",
	"■■■■■Ｋ⑦■■■■■■■■■■■  上■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_9F[Map_Height][Map_Width] = {
	"                第     ９     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■    ■■■■■■■■■    ■■■■■",
	"■■■■■■■    ■■■■■■■    ■■■■■■",
	"■■■■■■■■    ■■■■■    ■■■■■■■",
	"■■■■■■■■■    ■■■    ■■■■■■■■",
	"■■■■■■■■■■          ■■■■■■■■■",
	"■■■                                  下■■■",
	"■■■■■■■■■■          ■■■■■■■■■",
	"■■■■■■■■■    ■■■    ■■■■■■■■",
	"■■■■■■■■    ■■■■■    ■■■■■■■",
	"■■■■■■■    ■■■■■■■    ■■■■■■",
	"■■■■■■    ■■■■■■■■■    ■■■■■",
	"■■■■■    ■■■■■■■■■■■  上■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// =========10F=========
// ====================
char Map_10F[Map_Height][Map_Width] = {
	"                第    １０    層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■◆    ◆■■◆  ⑧        ⑧  ◆■■◆    ◆■",
	"■  ⑨⑧  ■■■■■■■■■■■■■■  ⑨⑨  ■",
	"■  ⑧⑨  ■■■■■■■■■■■■■■  ⑨⑨  ■",
	"■      ◆■■■■■  上■  ■■■■■      ◆■",
	"■■■■■■■■■  Ｄ■■  ■■■■■■■■■■",
	"■■■■■■■■■⑩■■■⑩■■■■■■■■■■",
	"■■■■■■■■■  Ａ■◎  ■■■■■■■■■■",
	"■■■■■■■■■◆  ⑩  ◇■■■■■■■■■■",
	"■◆    ◆■■■■■■■■■■■■■■◆      ■",
	"■  ⑧⑨  ■■■■■■■■■■■■■■  ⑧⑧  ■",
	"■  ⑨⑧  ■■◆  Ｓ⑩⑨⑧        ■■  ⑧⑧  ■",
	"■      ◆■■■■■■■■■■■■■■下    ◆■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_10F[Map_Height][Map_Width] = {
	"                第    １０    層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■◆    ◆■■◆                ◆■■◆    ◆■",
	"■        ■■■■■■■■■■■■■■        ■",
	"■        ■■■■■■■■■■■■■■        ■",
	"■      ◆■■■■■  上■  ■■■■■      ◆■",
	"■■■■■■■■■    ■■  ■■■■■■■■■■",
	"■■■■■■■■■  ■■■  ■■■■■■■■■■",
	"■■■■■■■■■    ■    ■■■■■■■■■■",
	"■■■■■■■■■◆      ◇■■■■■■■■■■",
	"■◆    ◆■■■■■■■■■■■■■■◆      ■",
	"■        ■■■■■■■■■■■■■■        ■",
	"■        ■■◆                  ■■        ■",
	"■      ◆■■■■■■■■■■■■■■下    ◆■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

// ====================
// ======Boss Room=====
// ====================
char Map_BossRoom[Map_Height][Map_Width] = {
	"                最     上     層                ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■ ○ ■■■■■■■■■■■",
	"■■■■■    ――― ／｜＼ ―――    ■■■■■",
	"■■■■■    ||       ｜       ||    ■■■■■",
	"■■■■■    ||      ／＼      ||    ■■■■■",
	"■■■■■    ||                ||    ■■■■■",	// 6	
	"■■■■■    ||                ||    ■■■■■",
	"■■■■■〒  ||                ||  〒■■■■■",	// 8
	"■■■■■    ||                ||    ■■■■■",
	"■■■■■    ||                ||    ■■■■■",
	"■■■■■〒  ||                ||  〒■■■■■",	// 11
	"■■■■■    ||                ||    ■■■■■",
	"■■■■■    ||                ||    ■■■■■",
	"■■■■■〒  ||                ||  〒■■■■■",	// 14
	"■■■■■    ||                ||    ■■■■■",
};

// ====================
// =====隠しエリア======
// ====================
char Map_Treasure[Map_Height][Map_Width] = {
	"                   隠しエリア                   ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■  ■■■■■■■■■■■■■",
	"■■■■■■■■■■■○■■■■■■■■■■■■",
	"■■■■■■○○○○○○○○○○○■■■■■■■",
	"■■■■■■  ■■■■■■■■■◇■■■■■■■",
	"■■■■■■■■■ＳＳＳＳ出■■■■■■■■■■",
	"■■■■■■■■■■■◎■■■■■■■■■■■■",
	"■■■■■■■■■■■◎■■■■■■■■■■■■",
	"■■■■■■■■■ＡＡ剣ＡＡ■■■■■■■■■■",
	"■■■■■■■■■■■◎■■■■■■■■■■■■",
	"■■■■■■■■■■■◎■金■■■■■■■■■■",
	"■■■■■■■■  ＤＤ鎧ＤＤ経■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};

/*
char Map_Treasure[Map_Height][Map_Width] = {
	"                   隠しエリア                   ",
	"――――――――――――――――――――――――",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■  ■■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■                      ■■■■■■■",
	"■■■■■■  ■■■■■■■■■◇■■■■■■■",
	"■■■■■■■■■        出■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■          ■■■■■■■■■■",
	"■■■■■■■■■■■  ■■■■■■■■■■■■",
	"■■■■■■■■■■■  ■  ■■■■■■■■■■",
	"■■■■■■■■              ■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
	"■■■■■■■■■■■■■■■■■■■■■■■■",
};
*/

char *CurtFloor;	// 現在階層のポインタ

/*******************************************************************************
関数名:	void InitMap(void)
引数:	void
戻り値:	void
説明:	マップの初期化処理
*******************************************************************************/
void InitMap(void)
{
	// 階層マップのポインタ
	CurtFloor = &Map_Enterance[0][0];

	return;
}

/*******************************************************************************
関数名:	void UpdateMap(void)
引数:	void
戻り値:	void
説明:	マップの更新処理
*******************************************************************************/
void UpdateMap(void)
{
	PLAYER *Player = GetPlayerAdr();

	// 今プレイヤーは階段のマスの中じゃなかったら
	if (Player->InStair == false)
	{
		// 現在の階層
		switch (Player->CurrentFloor)
		{
		case Enterance:
			CurtFloor = &Map_Enterance[0][0];
			break;
		case Floor_1F:
			CurtFloor = &Map_1F[0][0];
			break;
		case Floor_2F:
			CurtFloor = &Map_2F[0][0];
			break;
		case Floor_3F:
			CurtFloor = &Map_3F[0][0];
			break;
		case Floor_4F:
			CurtFloor = &Map_4F[0][0];
			break;
		case Floor_5F:
			CurtFloor = &Map_5F[0][0];
			break;
		case Floor_6F:
			CurtFloor = &Map_6F[0][0];
			break;
		case Floor_7F:
			CurtFloor = &Map_7F[0][0];
			break;
		case Floor_8F:
			CurtFloor = &Map_8F[0][0];
			break;
		case Floor_9F:
			CurtFloor = &Map_9F[0][0];
			break;
		case Floor_10F:
			CurtFloor = &Map_10F[0][0];
			break;
		case BossRoom:
			CurtFloor = &Map_BossRoom[0][0];
			break;
		case Floor_Treasure:
			CurtFloor = &Map_Treasure[0][0];
			break;
		default:
			break;
		}
	}

	return;
}

/*******************************************************************************
関数名:	void DrawMap(void)
引数:	void
戻り値:	void
説明:	マップの描画処理
*******************************************************************************/
void DrawMap(void)
{
	int i = 0, j = 0;						// ループ計算用
	int Length = 0;							// 配列の長さ
	int ArrowPostion_X = 0;					// 現在画面矢印の座標
	int ArrowPostion_Y = 0;
	char *DrawPostion = GetBGAdr(0, 0);		// 背景に描画する位置
	char *MapColumn = GetMapColAdr(0);		// 今はマップの何行目
	PLAYER *Player = GetPlayerAdr();
	static int StairPostion_X = 0;			// 階段の座標を記録する
	static int StairPostion_Y = 0;
	static bool SavedStair = false;			// 階段の座標を記録したか
	// 空白のマップ配列
	char Map_Clear[Map_Height][Map_Width] = {
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
		"                                                ",
	};

	// 隠しエリアの仕掛け
	if (Player->Item.TreasureRoomKey == true)
	{
		for (i = 0; i < 3; i++)
		{
			for (j = 0; j < 3; j++)
			{
				strncpy(&Map_Enterance[SecretDoor_Y + (i - 1)][SecretDoor_X + (j - 1) * 2], "  ", 2);
			}
		}
		strncpy(&Map_Enterance[SecretDoor_Y - 2][SecretDoor_X], "  ", 2);
		strncpy(&Map_Enterance[SecretDoor_Y - 3][SecretDoor_X], "  ", 2);
		strncpy(&Map_Enterance[SecretDoor_Y][SecretDoor_X], "隠", 2);
		Player->Item.TreasureRoomKey = false;
	}

	// ボス部屋のアニメーション
	if (Player->CurrentFloor == BossRoom)
	{
		if (Player->fy == 8 || Player->fy == 11 || Player->fy == 14)
		{
			strncpy(GetMapAdr(RoomFire_Left_X, Player->fy - 1), "火", 2);
			strncpy(GetMapAdr(RoomFire_Right_X, Player->fy - 1), "火", 2);
		}
	}

	// 消された階段を描き直す
	// 階層を移動したら
	if (Player->CurrentFloor != Player->OldFloor && Player->CurrentFloor != Floor_Treasure &&
		Player->CurrentFloor != BossRoom && Player->InTeleport == false)
	{
		// まだ階段の座標を記録しなければ
		if (SavedStair == false)
		{
			// 今プレイヤーの座標を記録する = 階段の座標
			StairPostion_X = Player->fx;
			StairPostion_Y = Player->fy;
			SavedStair = true;
			Player->InStair = true;
		}
		else
		{
			// 階段のマスから移動したら
			if (Player->fx != StairPostion_X || Player->fy != StairPostion_Y)
			{
				// 現在の階層は昔の階層より高いなら
				if (Player->CurrentFloor > Player->OldFloor)
				{
					strncpy(GetMapAdr(StairPostion_X, StairPostion_Y), "下", 2);
				}
				// 現在の階層は昔の階層より低いなら
				else if (Player->CurrentFloor < Player->OldFloor)
				{
					strncpy(GetMapAdr(StairPostion_X, StairPostion_Y), "上", 2);
				}
				Player->OldFloor = Player->CurrentFloor;
				SavedStair = false;
				Player->InStair = false;
			}
		}
	}
	// ワープ終了したばかり
	else
	{
		if (Player->InTeleport == true || SavedStair == true)
		{
			if (Player->CurrentFloor == Enterance)
			{
				SavedStair = false;
				Player->InStair = false;
				Player->InTeleport = false;
			}
			else
			{
				// まだ階段の座標を記録しなければ
				if (SavedStair == false)
				{
					// 今プレイヤーの座標を記録する = 階段の座標
					StairPostion_X = Player->fx;
					StairPostion_Y = Player->fy;
					SavedStair = true;
					Player->InStair = true;
					Player->InTeleport = false;
				}
				else
				{
					// 階段のマスから移動したら
					if (Player->fx != StairPostion_X || Player->fy != StairPostion_Y)
					{
						strncpy(GetMapAdr(StairPostion_X, StairPostion_Y), "下", 2);
						SavedStair = false;
						Player->InStair = false;
					}
				}
			}
		}
	}

	// ランタン照明モード
	if (Player->Item.FloorMap == false)
	{
		// 画面クリア
		for (i = 0; i < Map_Height; i++)
		{
			DrawPostion = GetBGAdr(MapStart_X, MapStart_Y + i);
			Length = strlen(&Map_Clear[i][0]);
			strncpy(DrawPostion, &Map_Clear[i][0], Length);
		}
		// 印出開頭顯示樓層的兩行
		for (i = 0; i < 2 && *(CurtFloor + i * Map_Width + 0) != NULL; i++)
		{
			MapColumn = GetMapColAdr(i);
			DrawPostion = GetBGAdr(MapStart_X, MapStart_Y + i);
			Length = strlen(MapColumn);
			strncpy(DrawPostion, MapColumn, Length);
		}
		// ランタン照明描画
		//  0 1 2 3 4 5 6
		// "― ― ― ― ― ― ― "  0
		// "|            |"	 1 
		// "|            |"  2
		// "|     Ｐ     |"	 3
		// "|            |"	 4
		// "|            |"  5
		// "― ― ― ― ― ― ― "  6
		// 一つ目のforループ：縦処理
		for (i = 0; i < LanternRange; i++)
		{
			// 現在矢印のY座標
			ArrowPostion_Y = Player->fy + i - ((LanternRange - 1) / 2);
			// 0 <= 矢印Y座標 < Map_Height
			if (ArrowPostion_Y >= 2 && ArrowPostion_Y < Map_Height)
			{
				// 二つ目のforループ：横処理
				for (j = 0; j < LanternRange; j++)
				{
					// 現在矢印のX座標
					ArrowPostion_X = Player->fx + j * 2 - (LanternRange - 1);
					// 0 <= 矢印X座標 < Map_Height - 1("-1"はMap_Widthの長さは49だから)
					if (ArrowPostion_X >= 0 && ArrowPostion_X < Map_Width - 1)
					{
						// 因為Player是以Map的(0,0)為原點，所以畫到背景時要加上MapStart_X、Y的誤差
						DrawPostion = GetBGAdr(MapStart_X + ArrowPostion_X, MapStart_Y + ArrowPostion_Y);
						if (i == 0)
						{
							strncpy(DrawPostion, "＿", 2);
						}
						else if (i == LanternRange - 1)
						{
							strncpy(DrawPostion, "￣", 2);
						}
						else
						{
							if (j == 0 || j == LanternRange - 1)
							{
								strncpy(DrawPostion, "||", 2);
							}
							else
							{
								strncpy(DrawPostion, GetMapAdr(ArrowPostion_X, ArrowPostion_Y), 2);
							}
						}
					}
				}
			}
		}
	}

	/* マップ描画処理 */
	// 図形の始点は(3,1)
	// (CurtFloor + i * Map_Width + 0) = &CurtFloor[i][0]
	// *(CurtFloor + i * Map_Width + 0) = CurtFloor[i][0]
	else
	{
		for (i = 0; i < Map_Height && *(CurtFloor + i * Map_Width + 0) != NULL; i++)
		{
			// CurtFloor[i][]の長さ
			MapColumn = GetMapColAdr(i);
			DrawPostion = GetBGAdr(MapStart_X, MapStart_Y + i);
			Length = strlen(MapColumn);
			strncpy(DrawPostion, MapColumn, Length);
		}
	}

	return;
}

/*******************************************************************************
関数名:	void UninitMap(void)
引数:	void
戻り値:	void
説明:	マップの終了処理
*******************************************************************************/
void UninitMap(void)
{
	return;
}

/*******************************************************************************
関数名:	char *GetMapAdr(int X, int Y)
引数:	int X, int Y
戻り値:	char *
説明:	Mapの(X,Y)位置のポインタをもらう
*******************************************************************************/
char *GetMapAdr(int X, int Y)
{
	// 戻り値：Mapの(X,Y)位置のポインタ
	return (CurtFloor + Map_Width * Y + X);
}

/*******************************************************************************
関数名:	char *GetMapColAdr(int Column)
引数:	int Column
戻り値:	char *
説明:	Map第Cloumn行先頭のポインタをもらう
*******************************************************************************/
char *GetMapColAdr(int Column)
{
	// 戻り値：Map第Cloumn行先頭のポインタ = &Map[Column][0]
	return (CurtFloor + Map_Width * Column + 0);
}